{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","inherits","createClass","key","value","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","style","cursor","onClick","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","match","params","_callee2","updContact","_context2","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9f2b76e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  componentDidMount = async () => {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users/',\n      newContact\n    );\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // CLEAR STATE\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  componentDidMount = async () => {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // CLEAR STATE\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}